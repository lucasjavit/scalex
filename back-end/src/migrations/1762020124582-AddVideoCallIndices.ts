import { MigrationInterface, QueryRunner } from "typeorm";

export class AddVideoCallIndices1762020124582 implements MigrationInterface {
    name = 'AddVideoCallIndices1762020124582'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "addresses" DROP CONSTRAINT "addresses_user_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" DROP CONSTRAINT "user_stage_progress_user_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" DROP CONSTRAINT "user_stage_progress_stage_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" DROP CONSTRAINT "user_card_progress_user_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" DROP CONSTRAINT "user_card_progress_card_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "review_sessions" DROP CONSTRAINT "review_sessions_user_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "review_sessions" DROP CONSTRAINT "review_sessions_card_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "cards" DROP CONSTRAINT "cards_unit_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "units" DROP CONSTRAINT "units_stage_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" DROP CONSTRAINT "user_unit_progress_user_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" DROP CONSTRAINT "user_unit_progress_unit_id_fkey"`);
        await queryRunner.query(`DROP INDEX "public"."idx_addresses_user_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_addresses_is_primary"`);
        await queryRunner.query(`DROP INDEX "public"."idx_addresses_postal_code"`);
        await queryRunner.query(`DROP INDEX "public"."idx_addresses_country"`);
        await queryRunner.query(`DROP INDEX "public"."idx_users_firebase_uid"`);
        await queryRunner.query(`DROP INDEX "public"."idx_users_email"`);
        await queryRunner.query(`DROP INDEX "public"."idx_users_is_active"`);
        await queryRunner.query(`DROP INDEX "public"."idx_users_created_at"`);
        await queryRunner.query(`DROP INDEX "public"."idx_users_role"`);
        await queryRunner.query(`DROP INDEX "public"."idx_user_stage_progress_user_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_user_stage_progress_stage_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_stages_deleted_at"`);
        await queryRunner.query(`DROP INDEX "public"."idx_stages_order"`);
        await queryRunner.query(`DROP INDEX "public"."idx_user_card_progress_user_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_user_card_progress_card_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_user_card_progress_next_review"`);
        await queryRunner.query(`DROP INDEX "public"."idx_user_card_progress_state"`);
        await queryRunner.query(`DROP INDEX "public"."idx_review_sessions_user_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_review_sessions_card_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_review_sessions_reviewed_at"`);
        await queryRunner.query(`DROP INDEX "public"."idx_cards_deleted_at"`);
        await queryRunner.query(`DROP INDEX "public"."idx_cards_unit_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_units_deleted_at"`);
        await queryRunner.query(`DROP INDEX "public"."idx_units_stage_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_units_order"`);
        await queryRunner.query(`DROP INDEX "public"."idx_user_unit_progress_user_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_user_unit_progress_unit_id"`);
        await queryRunner.query(`ALTER TABLE "addresses" DROP CONSTRAINT "check_address_type"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "check_email_format"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "check_birth_date"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "check_phone_format"`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" DROP CONSTRAINT "user_stage_progress_user_id_stage_id_key"`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" DROP CONSTRAINT "user_card_progress_user_id_card_id_key"`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" DROP CONSTRAINT "user_unit_progress_user_id_unit_id_key"`);
        await queryRunner.query(`COMMENT ON TABLE "addresses" IS NULL`);
        await queryRunner.query(`COMMENT ON TABLE "users" IS NULL`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "is_primary" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "created_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "updated_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "is_active" SET NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."user_role_enum" RENAME TO "user_role_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('user', 'admin', 'partner_english_course', 'partner_cnpj', 'partner_remittance', 'partner_resume', 'partner_interview', 'partner_networking', 'partner_job_marketplace', 'partner_community')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."users_role_enum" USING "role"::"text"::"public"."users_role_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" SET DEFAULT 'user'`);
        await queryRunner.query(`DROP TYPE "public"."user_role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "created_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updated_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ALTER COLUMN "is_completed" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ALTER COLUMN "started_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ALTER COLUMN "started_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "stages" ALTER COLUMN "created_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "stages" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "stages" ALTER COLUMN "updated_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "stages" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "ease_factor" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "ease_factor" SET DEFAULT '2.5'`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "interval" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "repetitions" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "state" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "created_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "updated_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "review_sessions" ALTER COLUMN "reviewed_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "review_sessions" ALTER COLUMN "reviewed_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "cards" ALTER COLUMN "created_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "cards" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "cards" ALTER COLUMN "updated_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "cards" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "units" ALTER COLUMN "created_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "units" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "units" ALTER COLUMN "updated_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "units" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "watch_time_seconds" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "is_completed" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "created_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "updated_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "video_call_sessions" ALTER COLUMN "started_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "video_call_sessions" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "video_call_sessions" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "video_call_queue" ALTER COLUMN "joined_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "video_call_queue" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "video_call_queue" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "video_call_active_periods" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "video_call_active_periods" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`CREATE INDEX "IDX_VIDEO_CALL_SESSIONS_ROOM_NAME" ON "video_call_sessions" ("room_name") `);
        await queryRunner.query(`CREATE INDEX "IDX_VIDEO_CALL_SESSIONS_EXPIRES_AT" ON "video_call_sessions" ("expires_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_VIDEO_CALL_SESSIONS_STATUS_EXPIRES" ON "video_call_sessions" ("status", "expires_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_VIDEO_CALL_SESSIONS_STATUS_CREATED" ON "video_call_sessions" ("status", "created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_VIDEO_CALL_QUEUE_LEVEL_STATUS" ON "video_call_queue" ("level", "status") `);
        await queryRunner.query(`CREATE INDEX "IDX_VIDEO_CALL_QUEUE_STATUS_JOINED" ON "video_call_queue" ("status", "joined_at") `);
        await queryRunner.query(`ALTER TABLE "addresses" ADD CONSTRAINT "CHK_471b4bda79e21c67a1d8bfa768" CHECK ("address_type" IN ('primary', 'billing', 'shipping', 'other'))`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "CHK_8ed32d83be57f1c0239124f5ab" CHECK ("phone" ~* '^[\\d\\s\\-\\+\\(\\)]+$')`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "CHK_bfc15b022420238b8430d721c0" CHECK ("birth_date" <= CURRENT_DATE)`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "CHK_ab32b1e53791724ae6ebc7bd1d" CHECK ("email" ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ADD CONSTRAINT "UQ_7cfba3debb5568bf0fdf8725f46" UNIQUE ("user_id", "stage_id")`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ADD CONSTRAINT "UQ_7826b6a440b9140cb72fc2e64e4" UNIQUE ("user_id", "card_id")`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ADD CONSTRAINT "UQ_3e5682a7c772851c7715ac1d3f2" UNIQUE ("user_id", "unit_id")`);
        await queryRunner.query(`ALTER TABLE "addresses" ADD CONSTRAINT "FK_16aac8a9f6f9c1dd6bcb75ec023" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ADD CONSTRAINT "FK_5c40f6d132be2768a61c6c9f739" FOREIGN KEY ("stage_id") REFERENCES "stages"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ADD CONSTRAINT "FK_44bcaae3e0fec0c206047bb5108" FOREIGN KEY ("card_id") REFERENCES "cards"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "review_sessions" ADD CONSTRAINT "FK_9836bc6a6d502f2ea9fe2faad53" FOREIGN KEY ("card_id") REFERENCES "cards"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cards" ADD CONSTRAINT "FK_4f0df27840405355111c14c5e66" FOREIGN KEY ("unit_id") REFERENCES "units"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "units" ADD CONSTRAINT "FK_931b220894b21b40a07d2afb440" FOREIGN KEY ("stage_id") REFERENCES "stages"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ADD CONSTRAINT "FK_91005a36de7caf4bc962760c2d4" FOREIGN KEY ("unit_id") REFERENCES "units"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "user_unit_progress" DROP CONSTRAINT "FK_91005a36de7caf4bc962760c2d4"`);
        await queryRunner.query(`ALTER TABLE "units" DROP CONSTRAINT "FK_931b220894b21b40a07d2afb440"`);
        await queryRunner.query(`ALTER TABLE "cards" DROP CONSTRAINT "FK_4f0df27840405355111c14c5e66"`);
        await queryRunner.query(`ALTER TABLE "review_sessions" DROP CONSTRAINT "FK_9836bc6a6d502f2ea9fe2faad53"`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" DROP CONSTRAINT "FK_44bcaae3e0fec0c206047bb5108"`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" DROP CONSTRAINT "FK_5c40f6d132be2768a61c6c9f739"`);
        await queryRunner.query(`ALTER TABLE "addresses" DROP CONSTRAINT "FK_16aac8a9f6f9c1dd6bcb75ec023"`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" DROP CONSTRAINT "UQ_3e5682a7c772851c7715ac1d3f2"`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" DROP CONSTRAINT "UQ_7826b6a440b9140cb72fc2e64e4"`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" DROP CONSTRAINT "UQ_7cfba3debb5568bf0fdf8725f46"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "CHK_ab32b1e53791724ae6ebc7bd1d"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "CHK_bfc15b022420238b8430d721c0"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "CHK_8ed32d83be57f1c0239124f5ab"`);
        await queryRunner.query(`ALTER TABLE "addresses" DROP CONSTRAINT "CHK_471b4bda79e21c67a1d8bfa768"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_VIDEO_CALL_QUEUE_STATUS_JOINED"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_VIDEO_CALL_QUEUE_LEVEL_STATUS"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_VIDEO_CALL_SESSIONS_STATUS_CREATED"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_VIDEO_CALL_SESSIONS_STATUS_EXPIRES"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_VIDEO_CALL_SESSIONS_EXPIRES_AT"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_VIDEO_CALL_SESSIONS_ROOM_NAME"`);
        await queryRunner.query(`ALTER TABLE "video_call_active_periods" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "video_call_active_periods" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "video_call_queue" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "video_call_queue" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "video_call_queue" ALTER COLUMN "joined_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "video_call_sessions" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "video_call_sessions" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "video_call_sessions" ALTER COLUMN "started_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "updated_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "created_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "is_completed" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ALTER COLUMN "watch_time_seconds" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "units" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "units" ALTER COLUMN "updated_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "units" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "units" ALTER COLUMN "created_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "cards" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "cards" ALTER COLUMN "updated_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "cards" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "cards" ALTER COLUMN "created_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "review_sessions" ALTER COLUMN "reviewed_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "review_sessions" ALTER COLUMN "reviewed_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "updated_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "created_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "state" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "repetitions" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "interval" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "ease_factor" SET DEFAULT 2.5`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ALTER COLUMN "ease_factor" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "stages" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "stages" ALTER COLUMN "updated_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "stages" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "stages" ALTER COLUMN "created_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ALTER COLUMN "started_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ALTER COLUMN "started_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ALTER COLUMN "is_completed" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updated_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "created_at" DROP NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."user_role_enum_old" AS ENUM('user', 'admin', 'partner_english_course', 'partner_cnpj', 'partner_remittance', 'partner_resume', 'partner_interview', 'partner_networking', 'partner_job_marketplace', 'partner_community')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."user_role_enum_old" USING "role"::"text"::"public"."user_role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" SET DEFAULT 'user'`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."user_role_enum_old" RENAME TO "user_role_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "is_active" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "updated_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "created_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "addresses" ALTER COLUMN "is_primary" DROP NOT NULL`);
        await queryRunner.query(`COMMENT ON TABLE "users" IS 'Core user information from Firebase authentication'`);
        await queryRunner.query(`COMMENT ON TABLE "addresses" IS 'User addresses - supports multiple addresses per user'`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ADD CONSTRAINT "user_unit_progress_user_id_unit_id_key" UNIQUE ("user_id", "unit_id")`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ADD CONSTRAINT "user_card_progress_user_id_card_id_key" UNIQUE ("user_id", "card_id")`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ADD CONSTRAINT "user_stage_progress_user_id_stage_id_key" UNIQUE ("user_id", "stage_id")`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "check_phone_format" CHECK (((phone)::text ~* '^[\\d\\s\\-\\+\\(\\)]+$'::text))`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "check_birth_date" CHECK ((birth_date <= CURRENT_DATE))`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "check_email_format" CHECK (((email)::text ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text))`);
        await queryRunner.query(`ALTER TABLE "addresses" ADD CONSTRAINT "check_address_type" CHECK (((address_type)::text = ANY ((ARRAY['primary'::character varying, 'billing'::character varying, 'shipping'::character varying, 'other'::character varying])::text[])))`);
        await queryRunner.query(`CREATE INDEX "idx_user_unit_progress_unit_id" ON "user_unit_progress" ("unit_id") `);
        await queryRunner.query(`CREATE INDEX "idx_user_unit_progress_user_id" ON "user_unit_progress" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "idx_units_order" ON "units" ("stage_id", "order_index") `);
        await queryRunner.query(`CREATE INDEX "idx_units_stage_id" ON "units" ("stage_id") `);
        await queryRunner.query(`CREATE INDEX "idx_units_deleted_at" ON "units" ("deleted_at") `);
        await queryRunner.query(`CREATE INDEX "idx_cards_unit_id" ON "cards" ("unit_id") `);
        await queryRunner.query(`CREATE INDEX "idx_cards_deleted_at" ON "cards" ("deleted_at") `);
        await queryRunner.query(`CREATE INDEX "idx_review_sessions_reviewed_at" ON "review_sessions" ("reviewed_at") `);
        await queryRunner.query(`CREATE INDEX "idx_review_sessions_card_id" ON "review_sessions" ("card_id") `);
        await queryRunner.query(`CREATE INDEX "idx_review_sessions_user_id" ON "review_sessions" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "idx_user_card_progress_state" ON "user_card_progress" ("state") `);
        await queryRunner.query(`CREATE INDEX "idx_user_card_progress_next_review" ON "user_card_progress" ("next_review_date") `);
        await queryRunner.query(`CREATE INDEX "idx_user_card_progress_card_id" ON "user_card_progress" ("card_id") `);
        await queryRunner.query(`CREATE INDEX "idx_user_card_progress_user_id" ON "user_card_progress" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "idx_stages_order" ON "stages" ("order_index") `);
        await queryRunner.query(`CREATE INDEX "idx_stages_deleted_at" ON "stages" ("deleted_at") `);
        await queryRunner.query(`CREATE INDEX "idx_user_stage_progress_stage_id" ON "user_stage_progress" ("stage_id") `);
        await queryRunner.query(`CREATE INDEX "idx_user_stage_progress_user_id" ON "user_stage_progress" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "idx_users_role" ON "users" ("role") `);
        await queryRunner.query(`CREATE INDEX "idx_users_created_at" ON "users" ("created_at") `);
        await queryRunner.query(`CREATE INDEX "idx_users_is_active" ON "users" ("is_active") `);
        await queryRunner.query(`CREATE INDEX "idx_users_email" ON "users" ("email") `);
        await queryRunner.query(`CREATE INDEX "idx_users_firebase_uid" ON "users" ("firebase_uid") `);
        await queryRunner.query(`CREATE INDEX "idx_addresses_country" ON "addresses" ("country") `);
        await queryRunner.query(`CREATE INDEX "idx_addresses_postal_code" ON "addresses" ("postal_code") `);
        await queryRunner.query(`CREATE INDEX "idx_addresses_is_primary" ON "addresses" ("is_primary") `);
        await queryRunner.query(`CREATE INDEX "idx_addresses_user_id" ON "addresses" ("user_id") `);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ADD CONSTRAINT "user_unit_progress_unit_id_fkey" FOREIGN KEY ("unit_id") REFERENCES "units"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_unit_progress" ADD CONSTRAINT "user_unit_progress_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "units" ADD CONSTRAINT "units_stage_id_fkey" FOREIGN KEY ("stage_id") REFERENCES "stages"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cards" ADD CONSTRAINT "cards_unit_id_fkey" FOREIGN KEY ("unit_id") REFERENCES "units"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "review_sessions" ADD CONSTRAINT "review_sessions_card_id_fkey" FOREIGN KEY ("card_id") REFERENCES "cards"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "review_sessions" ADD CONSTRAINT "review_sessions_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ADD CONSTRAINT "user_card_progress_card_id_fkey" FOREIGN KEY ("card_id") REFERENCES "cards"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_card_progress" ADD CONSTRAINT "user_card_progress_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ADD CONSTRAINT "user_stage_progress_stage_id_fkey" FOREIGN KEY ("stage_id") REFERENCES "stages"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_stage_progress" ADD CONSTRAINT "user_stage_progress_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "addresses" ADD CONSTRAINT "addresses_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

}
