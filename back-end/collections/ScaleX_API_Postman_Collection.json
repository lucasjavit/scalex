{
  "info": {
    "name": "ScaleX API Collection",
    "description": "Complete API testing collection for ScaleX application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "addressId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "User Management",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firebase_uid\": \"test_firebase_uid_{{$randomInt}}\",\n  \"email\": \"testuser{{$randomInt}}@example.com\",\n  \"full_name\": \"John Doe\",\n  \"birth_date\": \"1990-05-15\",\n  \"phone\": \"+1-555-123-4567\",\n  \"preferred_language\": \"en-US\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('userId', response.id);",
                  "    console.log('User ID saved:', response.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Get User by Firebase UID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/firebase/test_firebase_uid_123",
              "host": ["{{baseUrl}}"],
              "path": ["users", "firebase", "test_firebase_uid_123"]
            }
          }
        },
        {
          "name": "Get User by Email",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/email?email=testuser@example.com",
              "host": ["{{baseUrl}}"],
              "path": ["users", "email"],
              "query": [
                {
                  "key": "email",
                  "value": "testuser@example.com"
                }
              ]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"full_name\": \"John Smith Updated\",\n  \"phone\": \"+1-555-987-6543\",\n  \"preferred_language\": \"pt-BR\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Address Management",
      "item": [
        {
          "name": "Create Primary Address",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"address_type\": \"primary\",\n  \"street\": \"123 Main Street\",\n  \"number\": \"Apt 4B\",\n  \"complement\": \"Building A\",\n  \"neighborhood\": \"Downtown\",\n  \"city\": \"New York\",\n  \"state\": \"NY\",\n  \"postal_code\": \"10001\",\n  \"country\": \"United States\",\n  \"is_primary\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/addresses",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "addresses"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('addressId', response.id);",
                  "    console.log('Address ID saved:', response.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Billing Address",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"address_type\": \"billing\",\n  \"street\": \"456 Business Ave\",\n  \"number\": \"Suite 200\",\n  \"neighborhood\": \"Financial District\",\n  \"city\": \"New York\",\n  \"state\": \"NY\",\n  \"postal_code\": \"10005\",\n  \"country\": \"United States\",\n  \"is_primary\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/addresses",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "addresses"]
            }
          }
        },
        {
          "name": "Create Shipping Address",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"address_type\": \"shipping\",\n  \"street\": \"789 Warehouse Blvd\",\n  \"number\": \"Unit 15\",\n  \"neighborhood\": \"Industrial Zone\",\n  \"city\": \"Brooklyn\",\n  \"state\": \"NY\",\n  \"postal_code\": \"11201\",\n  \"country\": \"United States\",\n  \"is_primary\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/addresses",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "addresses"]
            }
          }
        },
        {
          "name": "Get All User Addresses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/addresses",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "addresses"]
            }
          }
        },
        {
          "name": "Update Address",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"is_primary\": true,\n  \"address_type\": \"primary\",\n  \"street\": \"456 Updated Business Ave\",\n  \"complement\": \"Updated Building\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/addresses/{{addressId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "addresses", "{{addressId}}"]
            }
          }
        },
        {
          "name": "Delete Address",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/addresses/{{addressId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "addresses", "{{addressId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Validation Tests",
      "item": [
        {
          "name": "Test Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firebase_uid\": \"test_firebase_uid_invalid\",\n  \"email\": \"invalid-email\",\n  \"full_name\": \"Invalid User\",\n  \"birth_date\": \"1990-05-15\",\n  \"phone\": \"+1-555-123-4567\",\n  \"preferred_language\": \"en-US\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Test Future Birth Date",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firebase_uid\": \"test_firebase_uid_future\",\n  \"email\": \"future@example.com\",\n  \"full_name\": \"Future User\",\n  \"birth_date\": \"2030-05-15\",\n  \"phone\": \"+1-555-123-4567\",\n  \"preferred_language\": \"en-US\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Test Invalid Phone",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firebase_uid\": \"test_firebase_uid_phone\",\n  \"email\": \"phone@example.com\",\n  \"full_name\": \"Phone User\",\n  \"birth_date\": \"1990-05-15\",\n  \"phone\": \"invalid-phone-format\",\n  \"preferred_language\": \"en-US\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Test Invalid Address Type",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"address_type\": \"invalid_type\",\n  \"street\": \"123 Test Street\",\n  \"postal_code\": \"12345\",\n  \"country\": \"Test Country\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/addresses",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "addresses"]
            }
          }
        },
        {
          "name": "Test Missing Required Fields",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firebase_uid\": \"test_firebase_uid_missing\",\n  \"email\": \"missing@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        }
      ]
    },
    {
      "name": "Test Scenarios",
      "item": [
        {
          "name": "Complete User Flow",
          "item": [
            {
              "name": "1. Create User",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firebase_uid\": \"flow_test_{{$randomInt}}\",\n  \"email\": \"flowtest{{$randomInt}}@example.com\",\n  \"full_name\": \"Flow Test User\",\n  \"birth_date\": \"1985-03-20\",\n  \"phone\": \"+1-555-999-8888\",\n  \"preferred_language\": \"en-US\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users",
                  "host": ["{{baseUrl}}"],
                  "path": ["users"]
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.collectionVariables.set('userId', response.id);",
                      "    console.log('Flow Test - User ID saved:', response.id);",
                      "}"
                    ]
                  }
                }
              ]
            },
            {
              "name": "2. Create Primary Address",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"address_type\": \"primary\",\n  \"street\": \"100 Flow Street\",\n  \"number\": \"Apt 1A\",\n  \"city\": \"Test City\",\n  \"state\": \"TC\",\n  \"postal_code\": \"12345\",\n  \"country\": \"Test Country\",\n  \"is_primary\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/{{userId}}/addresses",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "{{userId}}", "addresses"]
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.collectionVariables.set('addressId', response.id);",
                      "    console.log('Flow Test - Address ID saved:', response.id);",
                      "}"
                    ]
                  }
                }
              ]
            },
            {
              "name": "3. Create Secondary Address",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"address_type\": \"billing\",\n  \"street\": \"200 Secondary Ave\",\n  \"number\": \"Suite 2B\",\n  \"city\": \"Test City\",\n  \"state\": \"TC\",\n  \"postal_code\": \"12346\",\n  \"country\": \"Test Country\",\n  \"is_primary\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/{{userId}}/addresses",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "{{userId}}", "addresses"]
                }
              }
            },
            {
              "name": "4. Get User with Addresses",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/{{userId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "{{userId}}"]
                }
              }
            },
            {
              "name": "5. Update User",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"full_name\": \"Flow Test User Updated\",\n  \"phone\": \"+1-555-777-6666\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/{{userId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "{{userId}}"]
                }
              }
            },
            {
              "name": "6. Make Secondary Address Primary",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"is_primary\": true,\n  \"address_type\": \"primary\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/{{userId}}/addresses/{{addressId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "{{userId}}", "addresses", "{{addressId}}"]
                }
              }
            },
            {
              "name": "7. Verify Primary Address Change",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/{{userId}}/addresses",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "{{userId}}", "addresses"]
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
